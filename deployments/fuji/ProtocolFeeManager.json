{
  "address": "0x4A820A159444EcB779A8055B104d6A11c15A18F4",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_defaultProtocolFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ProtocolFeeManager__InvalidProtocolFee",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "collection",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "protocolFee",
          "type": "uint256"
        }
      ],
      "name": "SetProtocolFeeForCollection",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "collection",
          "type": "address"
        }
      ],
      "name": "UnsetProtocolFeeForCollection",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "defaultProtocolFee",
          "type": "uint256"
        }
      ],
      "name": "UpdateDefaultProtocolFee",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "collectionProtocolFeeOverrides",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOverridden",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "protocolFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultProtocolFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collection",
          "type": "address"
        }
      ],
      "name": "protocolFeeForCollection",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_defaultProtocolFee",
          "type": "uint256"
        }
      ],
      "name": "setDefaultProtocolFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collection",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_protocolFee",
          "type": "uint256"
        }
      ],
      "name": "setProtocolFeeForCollection",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collection",
          "type": "address"
        }
      ],
      "name": "unsetProtocolFeeForCollection",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xcee424be386bad189d35b64ce15b121dd534c47cc4f09966e8d593b1d29472a6",
  "receipt": {
    "to": null,
    "from": "0xc2D38178069757648FEfb5440737C2aE1671f19D",
    "contractAddress": "0x4A820A159444EcB779A8055B104d6A11c15A18F4",
    "transactionIndex": 0,
    "gasUsed": "423266",
    "logsBloom": "0x
    "blockHash": "0x61552fab471f238e95db3705cdecf67ff7baaccfa0e0d79bf398307c9d662164",
    "transactionHash": "0xcee424be386bad189d35b64ce15b121dd534c47cc4f09966e8d593b1d29472a6",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 8620844,
        "transactionHash": "0xcee424be386bad189d35b64ce15b121dd534c47cc4f09966e8d593b1d29472a6",
        "address": "0x4A820A159444EcB779A8055B104d6A11c15A18F4",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000c2d38178069757648fefb5440737c2ae1671f19d"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x61552fab471f238e95db3705cdecf67ff7baaccfa0e0d79bf398307c9d662164"
      }
    ],
    "blockNumber": 8620844,
    "cumulativeGasUsed": "423266",
    "status": 1,
    "byzantium": true
  },
  "args": [
    1000
  ],
  "numDeployments": 1,
  "solcInputHash": "d1f2df6fff78a7d04e1d58a9a2e894c9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_defaultProtocolFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ProtocolFeeManager__InvalidProtocolFee\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"}],\"name\":\"SetProtocolFeeForCollection\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"UnsetProtocolFeeForCollection\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"defaultProtocolFee\",\"type\":\"uint256\"}],\"name\":\"UpdateDefaultProtocolFee\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"collectionProtocolFeeOverrides\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOverridden\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultProtocolFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collection\",\"type\":\"address\"}],\"name\":\"protocolFeeForCollection\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_defaultProtocolFee\",\"type\":\"uint256\"}],\"name\":\"setDefaultProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_protocolFee\",\"type\":\"uint256\"}],\"name\":\"setProtocolFeeForCollection\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collection\",\"type\":\"address\"}],\"name\":\"unsetProtocolFeeForCollection\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_defaultProtocolFee\":\"default protocol fee\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"protocolFeeForCollection(address)\":{\"params\":{\"_collection\":\"address of collection to look up protocol fee for\"},\"returns\":{\"_0\":\"protocol fee for `_collection`\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setDefaultProtocolFee(uint256)\":{\"params\":{\"_defaultProtocolFee\":\"new default protocol fee\"}},\"setProtocolFeeForCollection(address,uint256)\":{\"params\":{\"_collection\":\"address of collection to set custom protocol fee for\",\"_protocolFee\":\"custom protocol fee\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unsetProtocolFeeForCollection(address)\":{\"params\":{\"_collection\":\"address of collection to unset custom protocol fee for\"}}},\"title\":\"ProtocolFeeManager\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectionProtocolFeeOverrides(address)\":{\"notice\":\"Mapping of collections to custom protocol fee overrides\"},\"constructor\":{\"notice\":\"Constructor\"},\"defaultProtocolFee()\":{\"notice\":\"Default protocol fee, with precision 100 (e.g. 200 -> 2%)\"},\"protocolFeeForCollection(address)\":{\"notice\":\"Get protocol fee for a given `_collection`, falling back to `defaultProtocolFee` if there is no custom protocol fee set\"},\"setDefaultProtocolFee(uint256)\":{\"notice\":\"Updates `defaultProtocolFee`\"},\"setProtocolFeeForCollection(address,uint256)\":{\"notice\":\"Sets custom protocol fee for `_collection`\"},\"unsetProtocolFeeForCollection(address)\":{\"notice\":\"Unsets custom protocol fee for `_collection`\"}},\"notice\":\"Tracks and manages protocol fees for collections in the Joepeg Exchange\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ProtocolFeeManager.sol\":\"ProtocolFeeManager\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/ProtocolFeeManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nimport {IProtocolFeeManager} from \\\"./interfaces/IProtocolFeeManager.sol\\\";\\n\\nerror ProtocolFeeManager__InvalidProtocolFee();\\n\\n/**\\n * @title ProtocolFeeManager\\n * @notice Tracks and manages protocol fees for collections in the Joepeg Exchange\\n */\\ncontract ProtocolFeeManager is IProtocolFeeManager, Ownable {\\n    struct ProtocolFeeOverride {\\n        bool isOverridden;\\n        uint256 protocolFee;\\n    }\\n\\n    /// @notice Default protocol fee, with precision 100 (e.g. 200 -> 2%)\\n    uint256 public override defaultProtocolFee;\\n\\n    /// @notice Mapping of collections to custom protocol fee overrides\\n    mapping(address => ProtocolFeeOverride)\\n        public collectionProtocolFeeOverrides;\\n\\n    event UpdateDefaultProtocolFee(\\n        address indexed user,\\n        uint256 defaultProtocolFee\\n    );\\n    event SetProtocolFeeForCollection(\\n        address indexed user,\\n        address indexed collection,\\n        uint256 protocolFee\\n    );\\n    event UnsetProtocolFeeForCollection(\\n        address indexed user,\\n        address indexed collection\\n    );\\n\\n    modifier isValidProtocolFee(uint256 _protocolFee) {\\n        if (_protocolFee > 10000) {\\n            revert ProtocolFeeManager__InvalidProtocolFee();\\n        }\\n        _;\\n    }\\n\\n    /**\\n     * @notice Constructor\\n     * @param _defaultProtocolFee default protocol fee\\n     */\\n    constructor(uint256 _defaultProtocolFee)\\n        isValidProtocolFee(_defaultProtocolFee)\\n    {\\n        defaultProtocolFee = _defaultProtocolFee;\\n    }\\n\\n    /**\\n     * @notice Updates `defaultProtocolFee`\\n     * @param _defaultProtocolFee new default protocol fee\\n     */\\n    function setDefaultProtocolFee(uint256 _defaultProtocolFee)\\n        external\\n        override\\n        onlyOwner\\n        isValidProtocolFee(_defaultProtocolFee)\\n    {\\n        defaultProtocolFee = _defaultProtocolFee;\\n        emit UpdateDefaultProtocolFee(msg.sender, _defaultProtocolFee);\\n    }\\n\\n    /**\\n     * @notice Sets custom protocol fee for `_collection`\\n     * @param _collection address of collection to set custom protocol fee for\\n     * @param _protocolFee custom protocol fee\\n     */\\n    function setProtocolFeeForCollection(\\n        address _collection,\\n        uint256 _protocolFee\\n    ) external override onlyOwner isValidProtocolFee(_protocolFee) {\\n        collectionProtocolFeeOverrides[_collection] = ProtocolFeeOverride({\\n            isOverridden: true,\\n            protocolFee: _protocolFee\\n        });\\n        emit SetProtocolFeeForCollection(msg.sender, _collection, _protocolFee);\\n    }\\n\\n    /**\\n     * @notice Unsets custom protocol fee for `_collection`\\n     * @param _collection address of collection to unset custom protocol fee for\\n     */\\n    function unsetProtocolFeeForCollection(address _collection)\\n        external\\n        override\\n        onlyOwner\\n    {\\n        collectionProtocolFeeOverrides[_collection] = ProtocolFeeOverride({\\n            isOverridden: false,\\n            protocolFee: 0\\n        });\\n        emit UnsetProtocolFeeForCollection(msg.sender, _collection);\\n    }\\n\\n    /**\\n     * @notice Get protocol fee for a given `_collection`, falling back to\\n     * `defaultProtocolFee` if there is no custom protocol fee set\\n     * @param _collection address of collection to look up protocol fee for\\n     * @return protocol fee for `_collection`\\n     */\\n    function protocolFeeForCollection(address _collection)\\n        external\\n        view\\n        override\\n        returns (uint256)\\n    {\\n        ProtocolFeeOverride\\n            memory protocolFeeOverride = collectionProtocolFeeOverrides[\\n                _collection\\n            ];\\n        return\\n            protocolFeeOverride.isOverridden\\n                ? protocolFeeOverride.protocolFee\\n                : defaultProtocolFee;\\n    }\\n}\\n\",\"keccak256\":\"0xbb6464b09ccc167634b4127faa35b71266171df36f4bc7a20c6d449f8bdb1575\",\"license\":\"MIT\"},\"contracts/interfaces/IProtocolFeeManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IProtocolFeeManager {\\n    function setDefaultProtocolFee(uint256 _defaultProtocolFee) external;\\n\\n    function setProtocolFeeForCollection(\\n        address _collection,\\n        uint256 _protocolFee\\n    ) external;\\n\\n    function unsetProtocolFeeForCollection(address _collection) external;\\n\\n    function protocolFeeForCollection(address _collection)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function defaultProtocolFee() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x4c23934d4de891c89d2d799459704750c5d02970ab2476878bf7c5f459941f6a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516106ab3803806106ab83398101604081905261002f916100b5565b61003833610065565b8061271081111561005c5760405163609ef09960e11b815260040160405180910390fd5b506001556100ce565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100c757600080fd5b5051919050565b6105ce806100dd6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80636034b510116100665780636034b51014610120578063700c520014610133578063715018a6146101465780638da5cb5b1461014e578063f2fde38b1461016957600080fd5b806305e0a2f21461009857806325225ef8146100e1578063421bcbdf146100f6578063522149271461010d575b600080fd5b6100c56100a6366004610505565b6002602052600090815260409020805460019091015460ff9091169082565b6040805192151583526020830191909152015b60405180910390f35b6100f46100ef366004610505565b61017c565b005b6100ff60015481565b6040519081526020016100d8565b6100f461011b366004610520565b61021f565b6100f461012e36600461054a565b6102e8565b6100ff610141366004610505565b610374565b6100f46103c8565b6000546040516001600160a01b0390911681526020016100d8565b6100f4610177366004610505565b6103fe565b6000546001600160a01b031633146101af5760405162461bcd60e51b81526004016101a690610563565b60405180910390fd5b604080518082018252600080825260208083018281526001600160a01b03861680845260029092528483209351845460ff1916901515178455516001909301929092559151909133917f27b148c625962b0d7ecf0f1aa108a6b63e023bbdd0e3554b2cbac6278943915a9190a350565b6000546001600160a01b031633146102495760405162461bcd60e51b81526004016101a690610563565b8061271081111561026d5760405163609ef09960e11b815260040160405180910390fd5b604080518082018252600180825260208083018681526001600160a01b0388166000818152600284528690209451855460ff191690151517855590519390920192909255915184815233917f832cc6ea2b93d7a764c02dfb77f93369b48a94f8aab340fb378a6c8d59f74832910160405180910390a3505050565b6000546001600160a01b031633146103125760405162461bcd60e51b81526004016101a690610563565b806127108111156103365760405163609ef09960e11b815260040160405180910390fd5b600182905560405182815233907f1aa18d703acdc8b2dc948c207bc30c6933aeed9c6fbd96f19c5a8e07f1eeb3359060200160405180910390a25050565b6001600160a01b03811660009081526002602090815260408083208151808301909252805460ff16151580835260019091015492820192909252906103bb576001546103c1565b80602001515b9392505050565b6000546001600160a01b031633146103f25760405162461bcd60e51b81526004016101a690610563565b6103fc6000610499565b565b6000546001600160a01b031633146104285760405162461bcd60e51b81526004016101a690610563565b6001600160a01b03811661048d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101a6565b61049681610499565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461050057600080fd5b919050565b60006020828403121561051757600080fd5b6103c1826104e9565b6000806040838503121561053357600080fd5b61053c836104e9565b946020939093013593505050565b60006020828403121561055c57600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212202a87ca5aee4136469bb90fcaaafa45f88532bdce2908d178ff66f7d8ebdcd2a764736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c80636034b510116100665780636034b51014610120578063700c520014610133578063715018a6146101465780638da5cb5b1461014e578063f2fde38b1461016957600080fd5b806305e0a2f21461009857806325225ef8146100e1578063421bcbdf146100f6578063522149271461010d575b600080fd5b6100c56100a6366004610505565b6002602052600090815260409020805460019091015460ff9091169082565b6040805192151583526020830191909152015b60405180910390f35b6100f46100ef366004610505565b61017c565b005b6100ff60015481565b6040519081526020016100d8565b6100f461011b366004610520565b61021f565b6100f461012e36600461054a565b6102e8565b6100ff610141366004610505565b610374565b6100f46103c8565b6000546040516001600160a01b0390911681526020016100d8565b6100f4610177366004610505565b6103fe565b6000546001600160a01b031633146101af5760405162461bcd60e51b81526004016101a690610563565b60405180910390fd5b604080518082018252600080825260208083018281526001600160a01b03861680845260029092528483209351845460ff1916901515178455516001909301929092559151909133917f27b148c625962b0d7ecf0f1aa108a6b63e023bbdd0e3554b2cbac6278943915a9190a350565b6000546001600160a01b031633146102495760405162461bcd60e51b81526004016101a690610563565b8061271081111561026d5760405163609ef09960e11b815260040160405180910390fd5b604080518082018252600180825260208083018681526001600160a01b0388166000818152600284528690209451855460ff191690151517855590519390920192909255915184815233917f832cc6ea2b93d7a764c02dfb77f93369b48a94f8aab340fb378a6c8d59f74832910160405180910390a3505050565b6000546001600160a01b031633146103125760405162461bcd60e51b81526004016101a690610563565b806127108111156103365760405163609ef09960e11b815260040160405180910390fd5b600182905560405182815233907f1aa18d703acdc8b2dc948c207bc30c6933aeed9c6fbd96f19c5a8e07f1eeb3359060200160405180910390a25050565b6001600160a01b03811660009081526002602090815260408083208151808301909252805460ff16151580835260019091015492820192909252906103bb576001546103c1565b80602001515b9392505050565b6000546001600160a01b031633146103f25760405162461bcd60e51b81526004016101a690610563565b6103fc6000610499565b565b6000546001600160a01b031633146104285760405162461bcd60e51b81526004016101a690610563565b6001600160a01b03811661048d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101a6565b61049681610499565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461050057600080fd5b919050565b60006020828403121561051757600080fd5b6103c1826104e9565b6000806040838503121561053357600080fd5b61053c836104e9565b946020939093013593505050565b60006020828403121561055c57600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212202a87ca5aee4136469bb90fcaaafa45f88532bdce2908d178ff66f7d8ebdcd2a764736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_defaultProtocolFee": "default protocol fee"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "protocolFeeForCollection(address)": {
        "params": {
          "_collection": "address of collection to look up protocol fee for"
        },
        "returns": {
          "_0": "protocol fee for `_collection`"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setDefaultProtocolFee(uint256)": {
        "params": {
          "_defaultProtocolFee": "new default protocol fee"
        }
      },
      "setProtocolFeeForCollection(address,uint256)": {
        "params": {
          "_collection": "address of collection to set custom protocol fee for",
          "_protocolFee": "custom protocol fee"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unsetProtocolFeeForCollection(address)": {
        "params": {
          "_collection": "address of collection to unset custom protocol fee for"
        }
      }
    },
    "title": "ProtocolFeeManager",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "collectionProtocolFeeOverrides(address)": {
        "notice": "Mapping of collections to custom protocol fee overrides"
      },
      "constructor": {
        "notice": "Constructor"
      },
      "defaultProtocolFee()": {
        "notice": "Default protocol fee, with precision 100 (e.g. 200 -> 2%)"
      },
      "protocolFeeForCollection(address)": {
        "notice": "Get protocol fee for a given `_collection`, falling back to `defaultProtocolFee` if there is no custom protocol fee set"
      },
      "setDefaultProtocolFee(uint256)": {
        "notice": "Updates `defaultProtocolFee`"
      },
      "setProtocolFeeForCollection(address,uint256)": {
        "notice": "Sets custom protocol fee for `_collection`"
      },
      "unsetProtocolFeeForCollection(address)": {
        "notice": "Unsets custom protocol fee for `_collection`"
      }
    },
    "notice": "Tracks and manages protocol fees for collections in the Joepeg Exchange",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/ProtocolFeeManager.sol:ProtocolFeeManager",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4610,
        "contract": "contracts/ProtocolFeeManager.sol:ProtocolFeeManager",
        "label": "defaultProtocolFee",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 4616,
        "contract": "contracts/ProtocolFeeManager.sol:ProtocolFeeManager",
        "label": "collectionProtocolFeeOverrides",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_struct(ProtocolFeeOverride)4606_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(ProtocolFeeOverride)4606_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct ProtocolFeeManager.ProtocolFeeOverride)",
        "numberOfBytes": "32",
        "value": "t_struct(ProtocolFeeOverride)4606_storage"
      },
      "t_struct(ProtocolFeeOverride)4606_storage": {
        "encoding": "inplace",
        "label": "struct ProtocolFeeManager.ProtocolFeeOverride",
        "members": [
          {
            "astId": 4603,
            "contract": "contracts/ProtocolFeeManager.sol:ProtocolFeeManager",
            "label": "isOverridden",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 4605,
            "contract": "contracts/ProtocolFeeManager.sol:ProtocolFeeManager",
            "label": "protocolFee",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}