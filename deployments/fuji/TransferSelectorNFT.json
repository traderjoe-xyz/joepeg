{
  "address": "0xC731D161484fcCb219d44075Bb02d8C0EEc1484D",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_transferManagerERC721",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_transferManagerERC1155",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "collection",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "transferManager",
          "type": "address"
        }
      ],
      "name": "CollectionTransferManagerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "collection",
          "type": "address"
        }
      ],
      "name": "CollectionTransferManagerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "INTERFACE_ID_ERC1155",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "INTERFACE_ID_ERC721",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TRANSFER_MANAGER_ERC1155",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TRANSFER_MANAGER_ERC721",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "collection",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "transferManager",
          "type": "address"
        }
      ],
      "name": "addCollectionTransferManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "collection",
          "type": "address"
        }
      ],
      "name": "checkTransferManagerForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "transferManager",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "collection",
          "type": "address"
        }
      ],
      "name": "removeCollectionTransferManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "transferManagerSelectorForCollection",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x2f6b7ddb681e233c694cf8918cadab789523a8e96e39679ff635a5395e8cdea7",
  "receipt": {
    "to": null,
    "from": "0xc2D38178069757648FEfb5440737C2aE1671f19D",
    "contractAddress": "0xC731D161484fcCb219d44075Bb02d8C0EEc1484D",
    "transactionIndex": 0,
    "gasUsed": "542269",
    "logsBloom": "0x
    "blockHash": "0xc18db4f39d2303447f409c484ddbb53d991cfc56624aa32cf0de8c3554d34b55",
    "transactionHash": "0x2f6b7ddb681e233c694cf8918cadab789523a8e96e39679ff635a5395e8cdea7",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 8620938,
        "transactionHash": "0x2f6b7ddb681e233c694cf8918cadab789523a8e96e39679ff635a5395e8cdea7",
        "address": "0xC731D161484fcCb219d44075Bb02d8C0EEc1484D",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000c2d38178069757648fefb5440737c2ae1671f19d"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xc18db4f39d2303447f409c484ddbb53d991cfc56624aa32cf0de8c3554d34b55"
      }
    ],
    "blockNumber": 8620938,
    "cumulativeGasUsed": "542269",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x859A0B8ff8E076Dd69cD152b95914FF446ec159b",
    "0x8d8bf34799E2Cde0e6b1bD5F6A24b76f85ab4394"
  ],
  "numDeployments": 1,
  "solcInputHash": "d1f2df6fff78a7d04e1d58a9a2e894c9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_transferManagerERC721\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_transferManagerERC1155\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"transferManager\",\"type\":\"address\"}],\"name\":\"CollectionTransferManagerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"CollectionTransferManagerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INTERFACE_ID_ERC1155\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INTERFACE_ID_ERC721\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSFER_MANAGER_ERC1155\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSFER_MANAGER_ERC721\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"transferManager\",\"type\":\"address\"}],\"name\":\"addCollectionTransferManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"checkTransferManagerForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"transferManager\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"removeCollectionTransferManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"transferManagerSelectorForCollection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addCollectionTransferManager(address,address)\":{\"details\":\"It is meant to be used for exceptions only (e.g., CryptoKitties)\",\"params\":{\"collection\":\"collection address to add specific transfer rule\"}},\"checkTransferManagerForToken(address)\":{\"details\":\"Support for ERC165 interface is checked AFTER custom implementation\",\"params\":{\"collection\":\"collection address\"},\"returns\":{\"transferManager\":\"address of transfer manager to use\"}},\"constructor\":{\"params\":{\"_transferManagerERC1155\":\"address of the ERC1155 transfer manager\",\"_transferManagerERC721\":\"address of the ERC721 transfer manager\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeCollectionTransferManager(address)\":{\"params\":{\"collection\":\"collection address to remove exception\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"TransferSelectorNFT\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addCollectionTransferManager(address,address)\":{\"notice\":\"Add a transfer manager for a collection\"},\"checkTransferManagerForToken(address)\":{\"notice\":\"Check the transfer manager for a token\"},\"constructor\":{\"notice\":\"Constructor\"},\"removeCollectionTransferManager(address)\":{\"notice\":\"Remove a transfer manager for a collection\"}},\"notice\":\"It selects the NFT transfer manager based on a collection address.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TransferSelectorNFT.sol\":\"TransferSelectorNFT\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/TransferSelectorNFT.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport {IERC165} from \\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\\";\\n\\nimport {ITransferSelectorNFT} from \\\"./interfaces/ITransferSelectorNFT.sol\\\";\\n\\n/**\\n * @title TransferSelectorNFT\\n * @notice It selects the NFT transfer manager based on a collection address.\\n */\\ncontract TransferSelectorNFT is ITransferSelectorNFT, Ownable {\\n    // ERC721 interfaceID\\n    bytes4 public constant INTERFACE_ID_ERC721 = 0x80ac58cd;\\n    // ERC1155 interfaceID\\n    bytes4 public constant INTERFACE_ID_ERC1155 = 0xd9b67a26;\\n\\n    // Address of the transfer manager contract for ERC721 tokens\\n    address public immutable TRANSFER_MANAGER_ERC721;\\n\\n    // Address of the transfer manager contract for ERC1155 tokens\\n    address public immutable TRANSFER_MANAGER_ERC1155;\\n\\n    // Map collection address to transfer manager address\\n    mapping(address => address) public transferManagerSelectorForCollection;\\n\\n    event CollectionTransferManagerAdded(\\n        address indexed collection,\\n        address indexed transferManager\\n    );\\n    event CollectionTransferManagerRemoved(address indexed collection);\\n\\n    /**\\n     * @notice Constructor\\n     * @param _transferManagerERC721 address of the ERC721 transfer manager\\n     * @param _transferManagerERC1155 address of the ERC1155 transfer manager\\n     */\\n    constructor(address _transferManagerERC721, address _transferManagerERC1155)\\n    {\\n        TRANSFER_MANAGER_ERC721 = _transferManagerERC721;\\n        TRANSFER_MANAGER_ERC1155 = _transferManagerERC1155;\\n    }\\n\\n    /**\\n     * @notice Add a transfer manager for a collection\\n     * @param collection collection address to add specific transfer rule\\n     * @dev It is meant to be used for exceptions only (e.g., CryptoKitties)\\n     */\\n    function addCollectionTransferManager(\\n        address collection,\\n        address transferManager\\n    ) external onlyOwner {\\n        require(\\n            collection != address(0),\\n            \\\"TransferSelectorNFT: Collection cannot be null address\\\"\\n        );\\n        require(\\n            transferManager != address(0),\\n            \\\"TransferSelectorNFT: TransferManager cannot be null address\\\"\\n        );\\n\\n        transferManagerSelectorForCollection[collection] = transferManager;\\n\\n        emit CollectionTransferManagerAdded(collection, transferManager);\\n    }\\n\\n    /**\\n     * @notice Remove a transfer manager for a collection\\n     * @param collection collection address to remove exception\\n     */\\n    function removeCollectionTransferManager(address collection)\\n        external\\n        onlyOwner\\n    {\\n        require(\\n            transferManagerSelectorForCollection[collection] != address(0),\\n            \\\"TransferSelectorNFT: Collection has no transfer manager\\\"\\n        );\\n\\n        // Set it to the address(0)\\n        transferManagerSelectorForCollection[collection] = address(0);\\n\\n        emit CollectionTransferManagerRemoved(collection);\\n    }\\n\\n    /**\\n     * @notice Check the transfer manager for a token\\n     * @dev Support for ERC165 interface is checked AFTER custom implementation\\n     * @param collection collection address\\n     * @return transferManager address of transfer manager to use\\n     */\\n    function checkTransferManagerForToken(address collection)\\n        external\\n        view\\n        override\\n        returns (address transferManager)\\n    {\\n        // Assign transfer manager (if any)\\n        transferManager = transferManagerSelectorForCollection[collection];\\n\\n        if (transferManager == address(0)) {\\n            if (IERC165(collection).supportsInterface(INTERFACE_ID_ERC721)) {\\n                transferManager = TRANSFER_MANAGER_ERC721;\\n            } else if (\\n                IERC165(collection).supportsInterface(INTERFACE_ID_ERC1155)\\n            ) {\\n                transferManager = TRANSFER_MANAGER_ERC1155;\\n            } else {\\n                revert(\\n                    \\\"TransferSelectorNFT: No NFT transfer manager available\\\"\\n                );\\n            }\\n        }\\n\\n        return transferManager;\\n    }\\n}\\n\",\"keccak256\":\"0x23c9619313ed0c5fc24d24e447e2ca9e0b52e4f84a4ccfd6f9bb47150304b3e5\",\"license\":\"MIT\"},\"contracts/interfaces/ITransferSelectorNFT.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface ITransferSelectorNFT {\\n    function checkTransferManagerForToken(address collection)\\n        external\\n        view\\n        returns (address);\\n}\\n\",\"keccak256\":\"0xcd8aae57d85dccef39ab3e2480993e4ba4f752605bf512ae5855a5978ccbf816\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b5060405161098638038061098683398101604081905261002f916100c2565b61003833610056565b6001600160601b0319606092831b8116608052911b1660a0526100f5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100bd57600080fd5b919050565b600080604083850312156100d557600080fd5b6100de836100a6565b91506100ec602084016100a6565b90509250929050565b60805160601c60a05160601c61085961012d6000396000818160f401526105e5015260008181610188015261053b01526108596000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063715018a611610071578063715018a61461016a5780638da5cb5b14610172578063b1357ddd14610183578063bc6bc0cd146101aa578063cc159493146101b8578063f2fde38b146101cb57600080fd5b806325c6a895146100ae57806333bf6156146100c357806338928956146100ef5780634216a7531461012e5780637053fb7914610157575b600080fd5b6100c16100bc366004610799565b6101de565b005b6100d1636cdb3d1360e11b81565b6040516001600160e01b031990911681526020015b60405180910390f35b6101167f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100e6565b61011661013c366004610777565b6001602052600090815260409020546001600160a01b031681565b6100c1610165366004610777565b610359565b6100c161045f565b6000546001600160a01b0316610116565b6101167f000000000000000000000000000000000000000000000000000000000000000081565b6100d16380ac58cd60e01b81565b6101166101c6366004610777565b610495565b6100c16101d9366004610777565b610675565b6000546001600160a01b031633146102115760405162461bcd60e51b8152600401610208906107ee565b60405180910390fd5b6001600160a01b0382166102865760405162461bcd60e51b815260206004820152603660248201527f5472616e7366657253656c6563746f724e46543a20436f6c6c656374696f6e2060448201527563616e6e6f74206265206e756c6c206164647265737360501b6064820152608401610208565b6001600160a01b0381166103025760405162461bcd60e51b815260206004820152603b60248201527f5472616e7366657253656c6563746f724e46543a205472616e736665724d616e60448201527f616765722063616e6e6f74206265206e756c6c206164647265737300000000006064820152608401610208565b6001600160a01b0382811660008181526001602052604080822080546001600160a01b0319169486169485179055517fda166be6ba0ebb71be3f83e7d669765de552ea08978bfe3e3e42d54174111b629190a35050565b6000546001600160a01b031633146103835760405162461bcd60e51b8152600401610208906107ee565b6001600160a01b03818116600090815260016020526040902054166104105760405162461bcd60e51b815260206004820152603760248201527f5472616e7366657253656c6563746f724e46543a20436f6c6c656374696f6e2060448201527f686173206e6f207472616e73666572206d616e616765720000000000000000006064820152608401610208565b6001600160a01b03811660008181526001602052604080822080546001600160a01b0319169055517f8c3bf4babc197f3db0e7ec65aaf23fc0efb0e689436aeea8514c3f01fd97841f9190a250565b6000546001600160a01b031633146104895760405162461bcd60e51b8152600401610208906107ee565b6104936000610710565b565b6001600160a01b038082166000908152600160205260409020541680610670576040516301ffc9a760e01b81526380ac58cd60e01b60048201526001600160a01b038316906301ffc9a79060240160206040518083038186803b1580156104fb57600080fd5b505afa15801561050f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053391906107cc565b1561055f57507f0000000000000000000000000000000000000000000000000000000000000000919050565b6040516301ffc9a760e01b8152636cdb3d1360e11b60048201526001600160a01b038316906301ffc9a79060240160206040518083038186803b1580156105a557600080fd5b505afa1580156105b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105dd91906107cc565b1561060957507f0000000000000000000000000000000000000000000000000000000000000000919050565b60405162461bcd60e51b815260206004820152603660248201527f5472616e7366657253656c6563746f724e46543a204e6f204e4654207472616e60448201527573666572206d616e6167657220617661696c61626c6560501b6064820152608401610208565b919050565b6000546001600160a01b0316331461069f5760405162461bcd60e51b8152600401610208906107ee565b6001600160a01b0381166107045760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610208565b61070d81610710565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461067057600080fd5b60006020828403121561078957600080fd5b61079282610760565b9392505050565b600080604083850312156107ac57600080fd5b6107b583610760565b91506107c360208401610760565b90509250929050565b6000602082840312156107de57600080fd5b8151801515811461079257600080fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220bba402dc1194445d33134fee8373e662bf41af7292083b5d839e8bcec14f68a964736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c8063715018a611610071578063715018a61461016a5780638da5cb5b14610172578063b1357ddd14610183578063bc6bc0cd146101aa578063cc159493146101b8578063f2fde38b146101cb57600080fd5b806325c6a895146100ae57806333bf6156146100c357806338928956146100ef5780634216a7531461012e5780637053fb7914610157575b600080fd5b6100c16100bc366004610799565b6101de565b005b6100d1636cdb3d1360e11b81565b6040516001600160e01b031990911681526020015b60405180910390f35b6101167f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100e6565b61011661013c366004610777565b6001602052600090815260409020546001600160a01b031681565b6100c1610165366004610777565b610359565b6100c161045f565b6000546001600160a01b0316610116565b6101167f000000000000000000000000000000000000000000000000000000000000000081565b6100d16380ac58cd60e01b81565b6101166101c6366004610777565b610495565b6100c16101d9366004610777565b610675565b6000546001600160a01b031633146102115760405162461bcd60e51b8152600401610208906107ee565b60405180910390fd5b6001600160a01b0382166102865760405162461bcd60e51b815260206004820152603660248201527f5472616e7366657253656c6563746f724e46543a20436f6c6c656374696f6e2060448201527563616e6e6f74206265206e756c6c206164647265737360501b6064820152608401610208565b6001600160a01b0381166103025760405162461bcd60e51b815260206004820152603b60248201527f5472616e7366657253656c6563746f724e46543a205472616e736665724d616e60448201527f616765722063616e6e6f74206265206e756c6c206164647265737300000000006064820152608401610208565b6001600160a01b0382811660008181526001602052604080822080546001600160a01b0319169486169485179055517fda166be6ba0ebb71be3f83e7d669765de552ea08978bfe3e3e42d54174111b629190a35050565b6000546001600160a01b031633146103835760405162461bcd60e51b8152600401610208906107ee565b6001600160a01b03818116600090815260016020526040902054166104105760405162461bcd60e51b815260206004820152603760248201527f5472616e7366657253656c6563746f724e46543a20436f6c6c656374696f6e2060448201527f686173206e6f207472616e73666572206d616e616765720000000000000000006064820152608401610208565b6001600160a01b03811660008181526001602052604080822080546001600160a01b0319169055517f8c3bf4babc197f3db0e7ec65aaf23fc0efb0e689436aeea8514c3f01fd97841f9190a250565b6000546001600160a01b031633146104895760405162461bcd60e51b8152600401610208906107ee565b6104936000610710565b565b6001600160a01b038082166000908152600160205260409020541680610670576040516301ffc9a760e01b81526380ac58cd60e01b60048201526001600160a01b038316906301ffc9a79060240160206040518083038186803b1580156104fb57600080fd5b505afa15801561050f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053391906107cc565b1561055f57507f0000000000000000000000000000000000000000000000000000000000000000919050565b6040516301ffc9a760e01b8152636cdb3d1360e11b60048201526001600160a01b038316906301ffc9a79060240160206040518083038186803b1580156105a557600080fd5b505afa1580156105b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105dd91906107cc565b1561060957507f0000000000000000000000000000000000000000000000000000000000000000919050565b60405162461bcd60e51b815260206004820152603660248201527f5472616e7366657253656c6563746f724e46543a204e6f204e4654207472616e60448201527573666572206d616e6167657220617661696c61626c6560501b6064820152608401610208565b919050565b6000546001600160a01b0316331461069f5760405162461bcd60e51b8152600401610208906107ee565b6001600160a01b0381166107045760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610208565b61070d81610710565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461067057600080fd5b60006020828403121561078957600080fd5b61079282610760565b9392505050565b600080604083850312156107ac57600080fd5b6107b583610760565b91506107c360208401610760565b90509250929050565b6000602082840312156107de57600080fd5b8151801515811461079257600080fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220bba402dc1194445d33134fee8373e662bf41af7292083b5d839e8bcec14f68a964736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addCollectionTransferManager(address,address)": {
        "details": "It is meant to be used for exceptions only (e.g., CryptoKitties)",
        "params": {
          "collection": "collection address to add specific transfer rule"
        }
      },
      "checkTransferManagerForToken(address)": {
        "details": "Support for ERC165 interface is checked AFTER custom implementation",
        "params": {
          "collection": "collection address"
        },
        "returns": {
          "transferManager": "address of transfer manager to use"
        }
      },
      "constructor": {
        "params": {
          "_transferManagerERC1155": "address of the ERC1155 transfer manager",
          "_transferManagerERC721": "address of the ERC721 transfer manager"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removeCollectionTransferManager(address)": {
        "params": {
          "collection": "collection address to remove exception"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "TransferSelectorNFT",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addCollectionTransferManager(address,address)": {
        "notice": "Add a transfer manager for a collection"
      },
      "checkTransferManagerForToken(address)": {
        "notice": "Check the transfer manager for a token"
      },
      "constructor": {
        "notice": "Constructor"
      },
      "removeCollectionTransferManager(address)": {
        "notice": "Remove a transfer manager for a collection"
      }
    },
    "notice": "It selects the NFT transfer manager based on a collection address.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/TransferSelectorNFT.sol:TransferSelectorNFT",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 5917,
        "contract": "contracts/TransferSelectorNFT.sol:TransferSelectorNFT",
        "label": "transferManagerSelectorForCollection",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      }
    }
  }
}